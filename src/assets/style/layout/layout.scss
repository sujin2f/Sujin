.row {
    display: flex;
    flex-wrap: wrap;
    padding: $row-padding;
}

.columns {
    margin: $column-margin;

    @include desktop {
        margin: $column-margin--desktop;
    }
}

// size-x
@for $i from 1 through $columns {
    .size-#{$i} {
        width: $column-unit * $i;

        @include desktop {
            width: $column-unit--desktop * $i;
        }

        @include tablet {
            width: $column-unit--tablet * $i;
        }

        @include mobile {
            width: 100%;
        }
    }

    .height-size-#{$i} {
        height: $column-unit * $i;

        @include desktop {
            height: $column-unit--desktop * $i;
        }

        @include tablet {
            height: $column-unit--tablet * $i;
        }
    }

    .columns.size-#{$i} {
        width: $column-unit * $i - $column-margin * 2;

        @include desktop {
            width: $column-unit--desktop * $i - $column-margin * 2;
        }

        @include tablet {
            width: $column-unit--tablet * $i - $column-margin * 2;
        }

        @include mobile {
            width: 100%;
        }
    }

    .columns.height-size-#{$i} {
        height: $column-unit * $i - $column-margin * 2;

        @include desktop {
            height: $column-unit--desktop * $i - $column-margin * 2;
        }

        @include tablet {
            height: $column-unit--tablet * $i - $column-margin * 2;
        }
    }
}

// size--x
@for $i from 1 through $columns {
    .size--#{$i} {
        width: calc(100% - #{$column-unit * $i});

        @include mobile {
            width: 100%;
        }
    }

    .columns.size--#{$i} {
        width: calc(100% - #{$column-unit * $i} - #{$column-margin * 2});

        @include desktop {
            width: calc(100% - #{$column-unit--desktop * $i} - #{$column-margin--desktop * 2});
        }

        @include tablet {
            width: calc(100% - #{$column-unit--tablet * $i} - #{$column-margin--desktop * 2});
        }

        @include mobile {
            width: 100%;
        }
    }
}

.size-100 {
    width: 100%;
}

.columns.size-100 {
    width: calc(100% - #{$column-margin * 2});

    @include desktop {
        width: calc(100% - #{$column-margin--desktop * 2});
    }
}

/* Fixed height offest variables */
$full-height-offset: $main-padding-top * 2 + $row-padding * 2;

$card-offset: $column-margin * 2;
$borders: $border-thickness * 2;
$card-main-offset: $column-margin * 2;
$header-card-offset: $column-margin * 2 + $card-header-card-height;
$card-header-offset: $card-header-height;

// Full height
.height-size-100 {
    height: calc(100vh - #{$full-height-offset});

    // Full height card
    &.card {
        height: calc(100vh - #{$full-height-offset} - #{$card-offset});

        .card__body {
            height: calc(100vh - #{$full-height-offset} - #{$card-offset} - #{$card-main-offset} - #{$borders});
            overflow: hidden;
        }

        // Full height card with the card header
        &.card--with-header {
            .card__body {
                height: calc(100vh - #{$full-height-offset} - #{$card-offset} - #{$card-main-offset} - #{$borders} - #{$card-header-offset});
            }
        }
    }
}
